{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SACXP,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAA0BM,OACxCL,EAAc,MAKlB,SACI,uBACIM,KAAO,OACPC,MAAUR,EACVS,SAjBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,QAiBfG,YAAc,sC,+BCRfC,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAUH,GAFrD,+DAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbA,kBAcLA,GAdK,4CAAH,sDCCAS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAOjB,EAAKkB,IAAQR,IACzB,4BAAKA,QCDJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/B2B,OAAQ,GACRS,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAetC,OARAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAlB,GAAI,OAAIgB,EAAS,CACpCX,OAAQL,EACRc,SAAS,SAGd,CAACtB,IAEGuB,EDVqBI,CAAa3B,GAAjCa,EAF6B,EAE7BA,OAAQS,EAFqB,EAErBA,QAEhB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEUzBiB,EA1BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCfpC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5e15215.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategorias }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim() !== '') {\n            setCategorias((cats) => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type = \"text\"\n                value = { inputValue }\n                onChange = { handleInputChange }\n                placeholder = \"Indique categorÃ­a a agregar\"\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n","\nconst getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=UDoeFAkdvCA1k88l34d7CYtEZQyFHhm3`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    })\n    console.log(gifs);\n    return gifs;\n}\n\nexport default getGifs;","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n    \n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img src = {url} alt = { title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n// import getGifs from '../helpers/getGifs';\n// import { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem \n                            key = { img.id }\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        images: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(gifs => setState({\n            images: gifs,\n            loading: false\n        }));\n        \n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategorias = { setCategorias }/>\n\n            <hr />\n\n            <ol>\n                {\n                    categorias.map( category => (\n                        <GifGrid \n                            key = { category } \n                            category = { category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}